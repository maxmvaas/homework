// 1. Вставить элементы равные 0 до и после первого минимального. (Вектор)
<!-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------!>
void solution(std::vector<int> &v) {
	if (!v.empty()) { 
		std::vector<int>::iterator it = std::min_element(v.begin(), v.end());
		if (it == v.begin()) {
			v.insert(it + 1, 2, 0);
			std::swap(v.front(), *(v.begin() + 1));
		}
		else if (it == v.end() - 1) {
			v.push_back(0);
			v.insert(it, 0);
		}
		else {
			v.insert(it + 1, 2, 0);
			std::swap(*it, *(it + 1));
		}
	}
}

<!-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------!>
// 1. То же самое, но со списком.
void solution(std::list<int> &l) {
	if (!l.empty()) {
		std::list<int>::iterator it = std::min_element(l.begin(), l.end());
		if (it == l.begin()) {
			advance(it, 1);
			l.insert(it, 2, 0);
			std::list<int>::iterator at = l.begin();
			advance(at, 1);
			std::swap(l.front(), *at);
		}
		/*else if (it == l.end()) {
			l.push_back(0);
			l.insert(it, 0);
		}*/
		else {
			std::list<int>::iterator at = it;
			advance(it, 1);
			l.insert(it, 2, 0);
			std::swap(*at, *it);
		}
	}
}
